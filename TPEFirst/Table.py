import sys
from PyQt5.QtWidgets import QApplication, QWidget, QTableWidget, QTableWidgetItem, QVBoxLayout
from main import *


class App(QWidget):

    def __init__(self):
        super().__init__()
        self.title = "Lab1 by Andrii Doroshenko (Task №308)"
        self.left = 200
        self.top = 200
        self.width = 1200
        self.height = 500
        self.initUI()

    def initUI(self):
        self.setWindowTitle(self.title)
        self.setGeometry(self.left, self.top, self.width, self.height)
        self.createTable()
        self.layout = QVBoxLayout()
        self.layout.addWidget(self.tableWidget)
        self.setLayout(self.layout)
        self.show()

    def createTable(self):
        self.tableWidget = QTableWidget()
        self.tableWidget.setRowCount(11)
        self.tableWidget.setColumnCount(9)
        self.tableWidget.setItem(0, 0, QTableWidgetItem("№"))
        self.tableWidget.setItem(0, 1, QTableWidgetItem("x1"))
        self.tableWidget.setItem(0, 2, QTableWidgetItem("x2"))
        self.tableWidget.setItem(0, 3, QTableWidgetItem("x3"))
        self.tableWidget.setItem(0, 4, QTableWidgetItem("y"))
        self.tableWidget.setItem(0, 6, QTableWidgetItem("xn1"))
        self.tableWidget.setItem(0, 7, QTableWidgetItem("xn2"))
        self.tableWidget.setItem(0, 8, QTableWidgetItem("xn3"))

        for i in range(1, 9):
            self.tableWidget.setItem(i, 0, QTableWidgetItem("{}".format(i)))
            self.tableWidget.setItem(i, 1, QTableWidgetItem(f"{x1[i - 1]}"))
            self.tableWidget.setItem(i, 2, QTableWidgetItem(f"{x2[i - 1]}"))
            self.tableWidget.setItem(i, 3, QTableWidgetItem(f"{x3[i - 1]}"))
            self.tableWidget.setItem(i, 4, QTableWidgetItem("{}".format(y[i - 1])))
            self.tableWidget.setItem(i, 5, QTableWidgetItem(f"\u2192Y\u0305\n(avg Y is {avg_y})")) if (
                        y[i - 1] is res_y) else self.tableWidget.setItem(i, 5, QTableWidgetItem(""))
            self.tableWidget.setItem(i, 6, QTableWidgetItem(f"{xn1[i - 1]:.5f}"))
            self.tableWidget.setItem(i, 7, QTableWidgetItem(f"{xn2[i - 1]:.5f}"))
            self.tableWidget.setItem(i, 8, QTableWidgetItem(f"{xn3[i - 1]:.5f}"))
        self.tableWidget.setItem(9, 1, QTableWidgetItem(f"{x_zero(x1)}"))
        self.tableWidget.setItem(9, 2, QTableWidgetItem(f"{x_zero(x2)}"))
        self.tableWidget.setItem(9, 3, QTableWidgetItem(f"{x_zero(x3)}"))
        self.tableWidget.setItem(10, 1, QTableWidgetItem(f"{dx(x1)}"))
        self.tableWidget.setItem(10, 2, QTableWidgetItem(f"{dx(x2)}"))
        self.tableWidget.setItem(10, 3, QTableWidgetItem(f"{dx(x3)}"))
        self.tableWidget.setItem(9, 4, QTableWidgetItem(f"{y_etalon} - Y(et)"))
        self.tableWidget.setItem(9, 0, QTableWidgetItem("x(0)"))
        self.tableWidget.setItem(10, 0, QTableWidgetItem("dx"))


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = App()
    sys.exit(app.exec_())





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































